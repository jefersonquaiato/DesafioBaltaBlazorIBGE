@page "/cities/state"

@inject IGetCityByStateUseCase GetCityByStateUseCase
@rendermode InteractiveServer
@attribute [StreamRendering(true)]

<CitiesMenu />

<h3>Buscar por UF</h3>

<div class="mb-3">
    <label class="form-label">Buscar por UF</label>
    <input type="text" class="form-control" @bind="Model.State" />
    <br />
    <button class="btn btn-info" @onclick="() => GetByStateAsync(Model.State) ">
        BUSCAR
    </button>
</div>

@if (_loading)
{
    <Loading />
}
else if (Ibges.Any())
{
    <table class="table">
        <thead>
            <tr>
                <th>Código IBGE</th>
                <th>UF</th>
                <th>Cidade</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Ibges)
            {
                <tr>
                    <td>@item.Id</td>
                    <td>@item.State</td>
                    <td>@item.City</td>
                    <td>
                        <a href="/cities/edit/@item.Id" class="btn btn-primary">
                            EDITAR
                        </a>
                        &nbsp;
                        <a href="/cities/delete/@item.Id" class="btn btn-danger">
                            EXCLUIR
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else if (_searchClicked)
{
    <p>Não foram encontrados registros para essa busca</p>
}


@code {

    public IEnumerable<Ibge> Ibges { get; set; } = Enumerable.Empty<Ibge>();
    private Ibge? Model = new();
    private bool _loading = false;
    private bool _searchClicked = false;
    CancellationToken cancellationToken;

    public async Task GetByStateAsync(string state)
    {
        _loading = true;
        _searchClicked = true;
        StateHasChanged();
        try
        {
            Ibges = await GetCityByStateUseCase.GetStateIbge(state, cancellationToken);
        }
        catch
        {
            
        }
        finally
        {
            _loading = false;
            StateHasChanged();
        }
    }
}
