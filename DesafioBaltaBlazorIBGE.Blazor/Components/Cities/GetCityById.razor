@page "/cities/id"

@inject IGetCityByIdUseCase GetCityByIdUseCase
@inject RecentlyCreatedIdService RecentlyCreatedIdService
@inject EventStateService EventStateService

@rendermode InteractiveServer
@attribute [StreamRendering(true)]

<CitiesMenu />

<div class="mb-3">
    <label class="form-label">Buscar pelo Código IBGE</label>
    <input type="number" class="form-control" @bind="Model.Id" />
    <br />
    <button class="btn btn-info" @onclick="() => HandleAsync(Model.Id) ">
        BUSCAR
    </button>
</div>

@if (EventStateService.Success.HasValue)
{
    @if (EventStateService.Success == true)
    {
        <div class="alert alert-success" role="alert">
            @EventStateService.Message
        </div>
    }
    else
    {
        <div class="alert alert-danger" role="alert">
            @EventStateService.Message
        </div>
    }
}

@if (_loading)
{
    <Loading />
}
else if (Ibges.Any())
{
    <table class="table">
        <thead>
            <tr>
                <th>Código IBGE</th>
                <th>UF</th>
                <th>Cidade</th>
                <th>Ações</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Ibges)
            {
                <tr>
                    <td>@item.Id</td>
                    <td>@item.State</td>
                    <td>@item.City</td>
                    <td>
                        <a href="/cities/edit/@item.Id" class="btn btn-primary">
                            EDITAR
                        </a>
                        &nbsp;
                        <a href="/cities/delete/@item.Id" class="btn btn-danger">
                            EXCLUIR
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else if (RecentlyCreatedIdService.RecentlyCreatedId != 0 && Ibges.Count == 0 && !_searchClicked)
{
    var cityId = RecentlyCreatedIdService.RecentlyCreatedId;
    HandleAsync(cityId);
}
else if (_searchClicked)
{
    EventStateService.Message = "Não foram encontrados dados para sua busca.";
    EventStateService.Success = false;

}

@code {
    private Ibge Model = new();
    private List<Ibge> Ibges = new();
    private bool _loading = false;
    private bool _searchClicked = false;

    CancellationToken cancellationToken;

    public Task HandleAsync(int id)
    {

        if (EventStateService.Success == false)
        {
            EventStateService.Success = null;
        }

        return HandleSearchAsync(id);
    }

    public async Task HandleSearchAsync(int id)
    {
        _loading = true;
        _searchClicked = true;

        try
        {
            Ibges.Clear();

            var cityId = await GetCityByIdUseCase.GetByIdAsync(id, cancellationToken);
            if (cityId is null)
            {
                Ibges.DefaultIfEmpty();
                return;
            }
            Ibges.Add(cityId);
        }
        catch (Exception ex)
        {
            EventStateService.Message = $"Ocorreu um erro: {ex.Message}";
            EventStateService.Success = false;
        }
        finally
        {
            _loading = false;
            StateHasChanged();
        }
    }
}
